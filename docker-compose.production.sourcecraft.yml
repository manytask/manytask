networks:
  manytask-net:
    external: true
    name: nginx-manytask-net

volumes:
    cache-src:
    solutions-src:

services:
    docs:
        build:
            dockerfile: Dockerfile
            context: .
            target: docs
        container_name: manytask-docs-src
        restart: always
        expose:
            - "80"
        environment:
            VIRTUAL_HOST: ${DOCS_HOST}
            VIRTUAL_PORT: 80
            LETSENCRYPT_HOST: ${DOCS_HOST}
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:80" ]
            interval: 1m
            timeout: 15s
            retries: 3
            start_period: 30s
        networks:
            - manytask-net
    manytask:
        # image: manytask/manytask:latest  # set SPECIFIC version you'll use
        build:
            dockerfile: Dockerfile
            context: .
            target: app
        container_name: manytask-src
        restart: always
        expose:
            - "5050"
        env_file: .env.src
        environment:
            VIRTUAL_HOST: ${APP_HOST}
            VIRTUAL_PORT: 5050
            LETSENCRYPT_HOST: ${APP_HOST}
            LETSENCRYPT_EMAIL: no-reply@manytask.org
        volumes:
            - cache-src:/cache
        networks:
            - manytask-net
    postgres:
        image: postgres:17
        container_name: manytask_postgres
        env_file: .env.src
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - "5433:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
        network_mode: bridge
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 5s
            timeout: 5s
            retries: 5
