"""Add fields from deadline config

Revision ID: 037c4373e638
Revises: bcca2f4efa74
Create Date: 2025-02-25 19:33:11.051086

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

import manytask

# revision identifiers, used by Alembic.
revision: str = '037c4373e638'
down_revision: Union[str, None] = 'bcca2f4efa74'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('courses', sa.Column('timezone', sa.String(), server_default='UTC', nullable=False))
    op.add_column('courses', sa.Column('max_submissions', sa.Integer(), nullable=True))
    op.add_column('courses', sa.Column('submission_penalty', sa.Float(), server_default='0', nullable=False))
    op.add_column('deadlines', sa.Column('start', sa.DateTime(timezone=True), server_default='2000-01-01 00:00:00+00:00', nullable=False))
    op.add_column('deadlines', sa.Column('steps', manytask.models.FloatDatetimeDict(), server_default='{}', nullable=False))
    op.add_column('deadlines', sa.Column('end', sa.DateTime(timezone=True), server_default='3000-01-01 00:00:00+00:00', nullable=False))
    op.drop_column('deadlines', 'data')
    op.add_column('task_groups', sa.Column('enabled', sa.Boolean(), server_default='true', nullable=False))
    op.add_column('tasks', sa.Column('score', sa.Integer(), server_default='0', nullable=False))
    op.add_column('tasks', sa.Column('is_special', sa.Boolean(), server_default='false', nullable=False))
    op.add_column('tasks', sa.Column('enabled', sa.Boolean(), server_default='true', nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('tasks', 'enabled')
    op.drop_column('tasks', 'is_special')
    op.drop_column('tasks', 'score')
    op.drop_column('task_groups', 'enabled')
    op.add_column('deadlines', sa.Column('data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, server_default='{}', nullable=False))
    op.drop_column('deadlines', 'end')
    op.drop_column('deadlines', 'steps')
    op.drop_column('deadlines', 'start')
    op.drop_column('courses', 'submission_penalty')
    op.drop_column('courses', 'max_submissions')
    op.drop_column('courses', 'timezone')
    # ### end Alembic commands ###
