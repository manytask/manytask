services:

    docs:
        build:
            context: .
            target: docs
        container_name: test-manytask-docs
        restart: always
        network_mode: bridge
        expose:
            - "8080"
        environment:
            VIRTUAL_HOST: ${DOCS_VIRTUAL_HOST}
            VIRTUAL_PORT: 80
            LETSENCRYPT_HOST: ${DOCS_LETSENCRYPT_HOST}
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:5050/healthcheck" ]
            interval: 1m
            timeout: 15s
            retries: 3
            start_period: 30s

    manytask:
        build:
            context: .
            target: app
        container_name: test-manytask
        env_file: .env
        environment:
            VIRTUAL_HOST: ${APP_VIRTUAL_HOST}
            VIRTUAL_PORT: 5050
            LETSENCRYPT_HOST: ${APP_LETSENCRYPT_HOST}
        ports:
            - "8081:5050"
        volumes:
            - ./manytask/:/app/manytask
            - .tmp/cache/:/cache
        dns:
            - 8.8.8.8
            - 8.8.4.4
        depends_on:
            postgres:
                condition: service_healthy
        links:
            -   postgres:postgres
        network_mode: bridge

    postgres:
        image: postgres:17
        container_name: manytask_postgres
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
        network_mode: bridge
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U adminmanytask -d manytask"]
            interval: 5s
            timeout: 5s
            retries: 5


volumes:
    postgres_data:
        name: manytask_postgres_data
